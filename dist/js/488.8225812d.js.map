{"version":3,"file":"js/488.8225812d.js","mappings":"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","sources":["webpack://vue2.0/./src/view/welcomeContent/welcomeContent.vue","webpack://vue2.0/src/view/welcomeContent/welcomeContent.vue","webpack://vue2.0/./src/view/welcomeContent/welcomeContent.vue?d03c","webpack://vue2.0/./src/view/welcomeContent/welcomeContent.vue?ce75"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"search\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.address),expression:\"address\"}],staticClass:\"search-inp\",attrs:{\"type\":\"text\",\"placeholder\":\"请输入要搜索的地名\"},domProps:{\"value\":(_vm.address)},on:{\"input\":function($event){if($event.target.composing)return;_vm.address=$event.target.value}}}),_c('div',{staticClass:\"search-btn\",on:{\"click\":_vm.search}},[_vm._v(\"搜索\")])]),_c('div',{staticStyle:{\"height\":\"400px\",\"width\":\"100%\",\"text-align\":\"center\",\"line-height\":\"500px\",\"font-size\":\"20px\"},attrs:{\"id\":\"container\"}}),_c('div',{staticClass:\"list\"},_vm._l((_vm.list),function(item,index){return _c('div',{key:index,staticClass:\"list-item\",on:{\"click\":function($event){return _vm.listClick(item)}}},[_c('div',{staticClass:\"list-item-left\"},[_c('div',{staticClass:\"list-item-name\"},[_vm._v(_vm._s(item.name || ''))]),_c('div',{staticClass:\"list-item-address\"},[_vm._v(_vm._s(item.addr || ''))])]),_c('div',{staticClass:\"list-item-btn\"},[_vm._v(\"发送\")])])}),0)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <!-- <iframe id=\"geoPage\" width=0 height=0 frameborder=0 style=\"display:none;\" scrolling=\"no\" src=\"https://apis.map.qq.com/tools/geolocation?key=DRSBZ-WO43X-OLO4S-ZOVE5-AB6RV-5WFH2&referer=111\">\r\n        </iframe> -->\r\n        <div class=\"search\">\r\n            <!-- <el-input class=\"search-inp\" v-model=\"address\" placeholder=\"请输入要搜索的地名\"></el-input> -->\r\n            <input type=\"text\" class=\"search-inp\" v-model=\"address\" placeholder=\"请输入要搜索的地名\" />\r\n            <div class=\"search-btn\" @click=\"search\">搜索</div>\r\n        </div>\r\n        <div id=\"container\" style=\"height: 400px;width: 100%;text-align: center;line-height: 500px;font-size: 20px;\">\r\n        </div>\r\n        <div class=\"list\">\r\n            <div class=\"list-item\" v-for=\"(item,index) in list\" :key=\"index\" @click=\"listClick(item)\">\r\n                <div class=\"list-item-left\">\r\n                    <div class=\"list-item-name\">{{item.name || ''}}</div>\r\n                    <div class=\"list-item-address\">{{item.addr || ''}}</div>\r\n                </div>\r\n                <div class=\"list-item-btn\">发送</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nconst qq = window.qq;\r\nimport { Toast, Field } from 'vant';\r\nexport default {\r\n    components: {\r\n        Field\r\n    },\r\n    data () {\r\n        return {\r\n            str: '',\r\n            list: [\r\n                // {\r\n                //     addr: 'add123', latLng\r\n                //         : { lat: '123', lng: '123' }\r\n                // }\r\n            ],\r\n            address: ''\r\n        };\r\n    },\r\n    created () {\r\n        document.title = '地图';\r\n    },\r\n    mounted () {\r\n        Toast.loading({\r\n            duration: 0, // 持续展示 toast\r\n            forbidClick: true,\r\n            message: '加载地图中...',\r\n        });\r\n        this.type = false;\r\n        this.geolocation = new qq.maps.Geolocation(\"DRSBZ-WO43X-OLO4S-ZOVE5-AB6RV-5WFH2\", \"111\");\r\n        // this.getLocation();\r\n        this.getGd();\r\n    },\r\n    methods: {\r\n        getGd () {\r\n            const that = this;\r\n            AMap.plugin('AMap.Geolocation', function () {\r\n                var geolocation = new AMap.Geolocation({\r\n                    enableHighAccuracy: true,//是否使用高精度定位，默认:true\r\n                    timeout: 10000,          //超过10秒后停止定位，默认：5s\r\n                    buttonPosition: 'RB',    //定位按钮的停靠位置\r\n                    buttonOffset: new AMap.Pixel(10, 20),//定位按钮与设置的停靠位置的偏移量，默认：Pixel(10, 20)\r\n                    zoomToAccuracy: true,   //定位成功后是否自动调整地图视野到定位点\r\n\r\n                });\r\n                console.log(geolocation, 'geo');\r\n                geolocation.getCurrentPosition(function (status, result) {\r\n                    if (status == 'complete') {\r\n                        console.log(result);\r\n                        const { lat, lng } = result.position;\r\n                        that.lat = lat;\r\n                        that.lng = lng;\r\n                        that.initAddress(lat, lng);\r\n                    } else {\r\n                        console.log(result, 'err');\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        initAddress (lat, lng) {\r\n            Toast.clear();\r\n            this.isOk = true;\r\n            const that = this;\r\n            this.lat = lat;\r\n            this.lng = lng;\r\n            const geocoder = new TMap.service.Geocoder();\r\n            const location = new TMap.LatLng(lat, lng);\r\n            geocoder\r\n                .getAddress({ location: location }) // 将给定的坐标位置转换为地址\r\n                .then((result) => {\r\n                    const { status, result: r } = result;\r\n                    if (status == 0) {\r\n                        that.list = [\r\n                            { addr: r.address, name: r.formatted_addresses.recommend, latLng: { lat, lng } }\r\n                        ];\r\n                    }\r\n\r\n                }).catch(err => {\r\n                    console.log(err, 'err');\r\n                });\r\n\r\n            this.initMap();\r\n        },\r\n        search () {\r\n            if (!this.isOk) return;\r\n            if (!this.address) return;\r\n            const that = this;\r\n            const searchService = new qq.maps.SearchService({\r\n                complete: function (results) {\r\n                    if (results.type === \"CITY_LIST\") {\r\n                        searchService.setLocation(results.detail.cities[0].cityName);\r\n                        if (that.address) {\r\n                            searchService.search(that.address);\r\n                        } else {\r\n                            // searchService.search(that.state.mapKeywords);\r\n                        }\r\n                        return;\r\n                    }\r\n                    const pois = results.detail.pois;\r\n                    that.list = pois.map(item => {\r\n                        return {\r\n                            addr: item.address,\r\n                            latLng: item.latLng,\r\n                            name: item.name\r\n                        };\r\n                    });\r\n                    // that.list = pois;\r\n                    // that.resMapList = pois;\r\n                    // that.setState({\r\n                    //   resMapList: pois,\r\n                    //   visible: true\r\n                    // })\r\n                    const latlngBounds = new qq.maps.LatLngBounds();\r\n                    for (let i = 0, l = pois.length; i < l; i++) {\r\n                        const poi = pois[i];\r\n                        latlngBounds.extend(poi.latLng);\r\n                    }\r\n                    that.map.fitBounds(latlngBounds);\r\n                    if (that.marker) {\r\n                        that.marker.setMap(null);\r\n                        that.marker = new qq.maps.Marker({\r\n                            position: pois[0].latLng,\r\n                            map: that.map\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n            searchService.search(this.address);\r\n        },\r\n        // getLocation () {\r\n        //     this.str = '获取中';\r\n        //     const that = this;\r\n        //     const showPosition = (position) => {\r\n        //         // alert(JSON.stringify(position));\r\n        //         Toast.clear();\r\n        //         this.isOk = true;\r\n        //         const { lat, lng, nation, province, city, addr } = position;\r\n        //         this.str = JSON.stringify(position);\r\n        //         this.lat = lat;\r\n        //         this.lng = lng;\r\n        //         if (this.lat) {\r\n        //             this.type = true;\r\n        //         }\r\n        //         const geocoder = new TMap.service.Geocoder();\r\n        //         const location = new TMap.LatLng(lat, lng);\r\n        //         geocoder\r\n        //             .getAddress({ location: location }) // 将给定的坐标位置转换为地址\r\n        //             .then((result) => {\r\n        //                 const { status, result: r } = result;\r\n        //                 if (status == 0) {\r\n        //                     that.list = [\r\n        //                         { addr: r.address, name: r.formatted_addresses.recommend, latLng: { lat, lng } }\r\n        //                     ];\r\n        //                 }\r\n\r\n        //             }).catch(err => {\r\n        //                 console.log(err, 'err');\r\n        //             });\r\n        //         // if (this.type) return;\r\n        //         this.initMap();\r\n        //     };\r\n\r\n        //     const showErr = (err) => {\r\n        //         console.log(err, 'test==>');\r\n        //         // this.str = JSON.stringify(err);\r\n        //         this.getLocation();\r\n        //     };\r\n        //     this.geolocation.getLocation(showPosition, showErr, { timeout: 30000 });\r\n        // },\r\n        initMap () {\r\n            const _this = this;\r\n            const myLatlng = new qq.maps.LatLng(this.lat, this.lng);\r\n            // 设置地图属性\r\n            const myOptions = {\r\n                zoom: 15,\r\n                center: myLatlng,\r\n                mapTypeId: qq.maps.MapTypeId.ROADMAP\r\n            };\r\n            // 创建地图，绑定dom\r\n            setTimeout(() => {\r\n                const that = this;\r\n                const map = new qq.maps.Map(document.getElementById(\"container\"), myOptions);\r\n                this.map = map;\r\n                // 现实已经存在的点\r\n                let marker = null;\r\n                if (this.lat) {\r\n                    marker = new qq.maps.Marker({\r\n                        position: myLatlng,\r\n                        map: map\r\n                    });\r\n                }\r\n                this.map = map;\r\n                this.marker = marker;\r\n                this.location = {\r\n                    lat: this.lat,\r\n                    lng: this.lng\r\n                };\r\n                qq.maps.event.addListener(map, \"click\", function (event) {\r\n                    if (this.disabled) {\r\n                        return;\r\n                    }\r\n                    // 获取详细地址回调\r\n                    const geocoder = new qq.maps.Geocoder({\r\n                        complete: (result) => {\r\n                            // console.log(result.detail)\r\n                            _this.list = result.detail.nearPois.map(item => {\r\n                                return {\r\n                                    addr: item.address,\r\n                                    latLng: item.latLng,\r\n                                    name: item.name\r\n                                };\r\n                            });\r\n                        }\r\n                    });\r\n                    // if (marker) {\r\n                    //     marker.setMap(null);\r\n                    // }\r\n                    if (that.marker) {\r\n                        that.marker.setMap(null);\r\n                    }\r\n                    // 点击出现标记\r\n                    that.marker = new qq.maps.Marker({\r\n                        position: event.latLng,\r\n                        map: map\r\n                    });\r\n                    map.setZoom(20);\r\n                    map.setCenter(event.latLng);\r\n                    // eslint-disable-next-line no-new\r\n                    new qq.maps.LatLng();\r\n                    const a = new qq.maps.LatLng(\r\n                        event.latLng.getLat(),\r\n                        event.latLng.getLng()\r\n                    );\r\n                    geocoder.getAddress(a);\r\n                });\r\n            }, 500);\r\n        },\r\n        listClick (item) {\r\n            try {\r\n                const latlngBounds = new qq.maps.LatLngBounds();\r\n                latlngBounds.extend(item.latLng);\r\n                this.map.fitBounds(latlngBounds);\r\n                if (this.marker) {\r\n                    this.marker.setMap(null);\r\n                    this.marker = new qq.maps.Marker({\r\n                        position: item.latLng,\r\n                        map: this.map\r\n                    });\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n            alert(item.addr);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.search {\r\n    height: 50px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n.search-inp {\r\n    flex: 1;\r\n    margin-left: 10px;\r\n    border: 1px solid #c2bebe;\r\n    height: 30px;\r\n    border-radius: 4px;\r\n    font-size: 12px;\r\n    padding-left: 10px;\r\n}\r\n.search-btn {\r\n    width: 60px;\r\n    height: 30px;\r\n    background: #07c160;\r\n    margin: 0 10px;\r\n    color: white;\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    line-height: 30px;\r\n}\r\n#container {\r\n    /*地图(容器)显示大小*/\r\n    width: 1200px;\r\n    height: 400px;\r\n}\r\n.list {\r\n    position: absolute;\r\n    top: 450px;\r\n    bottom: 0px;\r\n    left: 0;\r\n    right: 0;\r\n    overflow-y: auto;\r\n}\r\n.list-item {\r\n    height: 60px;\r\n    width: 100%;\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n    box-sizing: border-box;\r\n    padding-left: 10px;\r\n    display: flex;\r\n}\r\n.list-item-left {\r\n    flex-direction: column;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex: 1;\r\n    overflow: hidden;\r\n}\r\n.list-item-address {\r\n    font-size: 12px;\r\n    color: rgb(59, 58, 58);\r\n    padding-top: 10px;\r\n}\r\n.list-item-btn {\r\n    height: 60px;\r\n    line-height: 60px;\r\n    right: 20px;\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    margin: 0 10px;\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./welcomeContent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./welcomeContent.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./welcomeContent.vue?vue&type=template&id=f92c2eb0&scoped=true&\"\nimport script from \"./welcomeContent.vue?vue&type=script&lang=js&\"\nexport * from \"./welcomeContent.vue?vue&type=script&lang=js&\"\nimport style0 from \"./welcomeContent.vue?vue&type=style&index=0&id=f92c2eb0&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f92c2eb0\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","directives","name","rawName","value","address","expression","attrs","domProps","on","$event","target","composing","search","_v","staticStyle","_l","list","item","index","key","listClick","_s","addr","staticRenderFns","qq","window","components","Field","data","str","created","document","mounted","Toast","duration","forbidClick","message","methods","getGd","AMap","enableHighAccuracy","timeout","buttonPosition","buttonOffset","zoomToAccuracy","console","geolocation","lat","lng","that","initAddress","geocoder","getAddress","location","then","result","status","latLng","catch","err","complete","searchService","latlngBounds","position","map","initMap","zoom","center","mapTypeId","setTimeout","marker","_this","event","alert","component"],"sourceRoot":""}